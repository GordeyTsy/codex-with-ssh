apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: k8s-gw
data:
  nginx.conf: |
    worker_processes  1;
    events { worker_connections  1024; }
    http {
      map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
      }
      log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
      access_log /var/log/nginx/access.log main;
      error_log  /var/log/nginx/error.log warn;

      client_max_body_size 64m;
      proxy_read_timeout   600s;
      proxy_send_timeout   600s;

      upstream apiserver {
        server __UPSTREAM_API__;
        keepalive 64;
      }

      server {
        listen 8080;
        server_name _;

        location = /.well-known/apiserver/healthz {
          proxy_http_version 1.1;
          proxy_set_header Host kubernetes.default.svc;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
__HEALTHZ_AUTH_BLOCK__
          proxy_ssl_name kubernetes.default.svc;
          proxy_ssl_server_name on;
          proxy_ssl_verify on;
          proxy_ssl_protocols TLSv1.2 TLSv1.3;
          proxy_ssl_trusted_certificate /etc/ssl/kube/ca.crt;
          proxy_pass https://apiserver/readyz;
        }

        location / {
          proxy_http_version 1.1;
          proxy_set_header Host kubernetes.default.svc;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection $connection_upgrade;
__PRIMARY_AUTH_BLOCK__

          proxy_ssl_name kubernetes.default.svc;
          proxy_ssl_server_name on;
          proxy_ssl_verify on;
          proxy_ssl_protocols TLSv1.2 TLSv1.3;
          proxy_ssl_trusted_certificate /etc/ssl/kube/ca.crt;

          proxy_pass https://apiserver;
        }
      }
    }

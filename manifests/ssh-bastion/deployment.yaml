apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${SSH_DEPLOYMENT_NAME}
  namespace: ${SSH_NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ssh-bastion
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ssh-bastion
    spec:
${SSH_NODE_PLACEMENT_BLOCK}
      securityContext:
        fsGroup: 1000
      containers:
        - name: codex-ssh-bastion
          image: ${SSH_BASTION_IMAGE_REF}
          imagePullPolicy: ${SSH_IMAGE_PULL_POLICY}
          ports:
            - containerPort: 22
              name: ssh
            - containerPort: ${SSH_HTTP_TUNNEL_PORT}
              name: http-tunnel
          env:
            - name: SSH_NAMESPACE
              value: ${SSH_NAMESPACE}
            - name: SSH_AUTHORIZED_SECRET
              value: ${SSH_AUTHORIZED_SECRET}
            - name: HTTP_TUNNEL_LISTEN_HOST
              value: "0.0.0.0"
            - name: HTTP_TUNNEL_LISTEN_PORT
              value: "${SSH_HTTP_TUNNEL_PORT}"
            - name: HTTP_TUNNEL_AUTH
              valueFrom:
                secretKeyRef:
                  name: ${SSH_TUNNEL_SECRET_NAME}
                  key: auth
          volumeMounts:
            - name: authorized-keys
              mountPath: /config/authorized_keys
              readOnly: true
            - name: bastion-config
              mountPath: /config/configmap
              readOnly: true
            - name: bastion-data
              mountPath: /var/lib/codex-ssh
            - name: motd-shared
              mountPath: /config/motd
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - >-
                    if command -v codex-hostctl >/dev/null 2>&1; then
                      codex-hostctl export > /config/motd/inventory.json.tmp &&
                      mv /config/motd/inventory.json.tmp /config/motd/inventory.json;
                    fi
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - 'nc -z -w 2 127.0.0.1 22'
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3
          livenessProbe:
            tcpSocket:
              port: 22
            initialDelaySeconds: 10
            periodSeconds: 20
      volumes:
        - name: authorized-keys
          secret:
            secretName: ${SSH_AUTHORIZED_SECRET}
            defaultMode: 0400
        - name: bastion-config
          configMap:
            name: ${SSH_CONFIGMAP_NAME}
            defaultMode: 0440
${SSH_DATA_VOLUME_BLOCK}
        - name: motd-shared
          emptyDir: {}
